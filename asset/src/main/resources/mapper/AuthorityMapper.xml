<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyb2c.dao.AuthorityMapper">
	<resultMap id="BaseResultMap" type="com.xyb2c.pojo.Authority">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="c_timestamp" property="cTimestamp" jdbcType="TIMESTAMP" />
		<result column="m_timestamp" property="mTimestamp" jdbcType="TIMESTAMP" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="enabled" property="enabled" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="BIGINT" />
		<result column="sign" property="sign" jdbcType="VARCHAR" />
		<result column="e_name" property="eName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, c_timestamp, m_timestamp, name, url, enabled,
		parent_id, sign, e_name
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.xyb2c.pojo.AuthorityExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from authority
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from authority
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		authority
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.xyb2c.pojo.AuthorityExample">
		delete from authority
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.xyb2c.pojo.Authority">
		insert into authority (id,
		c_timestamp, m_timestamp,
		name, url, enabled,
		parent_id, sign, e_name
		)
		values (#{id,jdbcType=BIGINT}, #{cTimestamp,jdbcType=TIMESTAMP},
		#{mTimestamp,jdbcType=TIMESTAMP},
		#{name,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER},
		#{parentId,jdbcType=BIGINT}, #{sign,jdbcType=VARCHAR},
		#{eName,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.xyb2c.pojo.Authority">
		insert into authority
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="cTimestamp != null">
				c_timestamp,
			</if>
			<if test="mTimestamp != null">
				m_timestamp,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="enabled != null">
				enabled,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="sign != null">
				sign,
			</if>
			<if test="eName != null">
				e_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="cTimestamp != null">
				#{cTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="mTimestamp != null">
				#{mTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="enabled != null">
				#{enabled,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=BIGINT},
			</if>
			<if test="sign != null">
				#{sign,jdbcType=VARCHAR},
			</if>
			<if test="eName != null">
				#{eName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.xyb2c.pojo.AuthorityExample"
		resultType="java.lang.Integer">
		select count(*) from authority
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update authority
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.cTimestamp != null">
				c_timestamp = #{record.cTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="record.mTimestamp != null">
				m_timestamp = #{record.mTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.url != null">
				url = #{record.url,jdbcType=VARCHAR},
			</if>
			<if test="record.enabled != null">
				enabled = #{record.enabled,jdbcType=INTEGER},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=BIGINT},
			</if>
			<if test="record.sign != null">
				sign = #{record.sign,jdbcType=VARCHAR},
			</if>
			<if test="record.eName != null">
				e_name = #{record.eName,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update authority
		set id = #{record.id,jdbcType=BIGINT},
		c_timestamp =
		#{record.cTimestamp,jdbcType=TIMESTAMP},
		m_timestamp =
		#{record.mTimestamp,jdbcType=TIMESTAMP},
		name =
		#{record.name,jdbcType=VARCHAR},
		url = #{record.url,jdbcType=VARCHAR},
		enabled = #{record.enabled,jdbcType=INTEGER},
		parent_id =
		#{record.parentId,jdbcType=BIGINT},
		sign =
		#{record.sign,jdbcType=VARCHAR},
		e_name =
		#{record.eName,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.xyb2c.pojo.Authority">
		update authority
		<set>
			<if test="cTimestamp != null">
				c_timestamp = #{cTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="mTimestamp != null">
				m_timestamp = #{mTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="enabled != null">
				enabled = #{enabled,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=BIGINT},
			</if>
			<if test="sign != null">
				sign = #{sign,jdbcType=VARCHAR},
			</if>
			<if test="eName != null">
				e_name = #{eName,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xyb2c.pojo.Authority">
		update authority
		set c_timestamp = #{cTimestamp,jdbcType=TIMESTAMP},
		m_timestamp =
		#{mTimestamp,jdbcType=TIMESTAMP},
		name = #{name,jdbcType=VARCHAR},
		url =
		#{url,jdbcType=VARCHAR},
		enabled = #{enabled,jdbcType=INTEGER},
		parent_id = #{parentId,jdbcType=BIGINT},
		sign =
		#{sign,jdbcType=VARCHAR},
		e_name = #{eName,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=BIGINT}
	</update>
	<select id="getAuthority" parameterType="java.lang.String"
		resultType="com.xyb2c.pojo.Authority">
		<!-- select
		authority.id,authority.name,authority.url,authority.e_name
		from
		authority where id in ( select aid from
		role_authority where rid in(
		select sundry_worker_class.id from
		sundry_worker_class,worker,user_role
		where worker.id = #{id}) ) and
		enabled
		= 1 -->
		select authority.id,authority.name,authority.url,authority.e_name from authority where id in 
( select aid from role_authority where rid in( select rid from user_role where user_role.uid = #{id}) ) 
and enabled = 1
	</select>
	<select id="getRoleAuthority" resultMap="BaseResultMap">
		select authority.id from
		role_authority , authority where
		role_authority.rid=#{id} and
		authority.parent_id=#{menuId} and
		role_authority.aid=authority.id
	</select>
	<select id="AuthorityExist" resultMap="BaseResultMap">
		select authority.id from
		role_authority , authority where
		role_authority.rid=#{rid} and
		role_authority.aid=#{aid} and
		role_authority.aid=authority.id
	</select>
	<insert id="save">
		insert into role_authority (rid,aid)
		values(#{rid},#{aid})
	</insert>
	<delete id="delete">
		delete from role_authority where
		rid=#{rid} and
		aid=#{aid}
	</delete>
	<select id="getUserAuthority" resultMap="BaseResultMap">
		select * from authority
		,user_authority where user_authority.uid =#{uid}
		and
		authority.parent_id=#{menuId}
		and user_authority.aid=authority.id
	</select>
	<insert id="saveUserAuthority">
		insert into user_authority(uid,aid)
		values(#{uid},#{aid})
	</insert>
	<delete id="deleteUserAuthority">
		delete from user_authority where
		uid=#{uid} and
		aid=#{aid}
	</delete>
	<select id="userAuthorityExist" resultMap="BaseResultMap">
		select authority.id
		from
		user_authority , authority where
		user_authority.uid=#{uid} and
		user_authority.aid=#{aid} and
		user_authority.aid=authority.id
	</select>
	<select id="getAuthorityByRoleId" resultMap="BaseResultMap">
		select aid as id from role_authority where rid=#{rid}
	</select>
	<select id="getAuthorityByWorkerId" resultMap="BaseResultMap">
		select * from authority inner join user_authority where
		user_authority.uid=#{uid} and user_authority.aid=authority.id
	</select>
</mapper>