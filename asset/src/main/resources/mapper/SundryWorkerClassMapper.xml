<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xyb2c.dao.SundryWorkerClassMapper">
	<resultMap id="BaseResultMap" type="com.xyb2c.pojo.SundryWorkerClass">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="information" property="information" jdbcType="VARCHAR" />
		<result column="c_timestamp" property="cTimestamp" jdbcType="TIMESTAMP" />
		<result column="e_timestamp" property="eTimestamp" jdbcType="TIMESTAMP" />
		<result column="enable" property="enable" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, information, c_timestamp, e_timestamp, enable
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.xyb2c.pojo.SundryWorkerClassExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sundry_worker_class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sundry_worker_class
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sundry_worker_class
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.xyb2c.pojo.SundryWorkerClassExample">
		delete from sundry_worker_class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.xyb2c.pojo.SundryWorkerClass">
		insert into
		sundry_worker_class (id, information, c_timestamp,
		e_timestamp, enable)
		values (#{id,jdbcType=INTEGER}, #{information,jdbcType=VARCHAR},
		#{cTimestamp,jdbcType=TIMESTAMP},
		#{eTimestamp,jdbcType=TIMESTAMP},
		#{enable,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.xyb2c.pojo.SundryWorkerClass">
		insert into sundry_worker_class
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="information != null">
				information,
			</if>
			<if test="cTimestamp != null">
				c_timestamp,
			</if>
			<if test="eTimestamp != null">
				e_timestamp,
			</if>
			<if test="enable != null">
				enable,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="information != null">
				#{information,jdbcType=VARCHAR},
			</if>
			<if test="cTimestamp != null">
				#{cTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="eTimestamp != null">
				#{eTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="enable != null">
				#{enable,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.xyb2c.pojo.SundryWorkerClassExample"
		resultType="java.lang.Integer">
		select count(*) from sundry_worker_class
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sundry_worker_class
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.information != null">
				information = #{record.information,jdbcType=VARCHAR},
			</if>
			<if test="record.cTimestamp != null">
				c_timestamp = #{record.cTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="record.eTimestamp != null">
				e_timestamp = #{record.eTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="record.enable != null">
				enable = #{record.enable,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sundry_worker_class
		set id = #{record.id,jdbcType=INTEGER},
		information = #{record.information,jdbcType=VARCHAR},
		c_timestamp =
		#{record.cTimestamp,jdbcType=TIMESTAMP},
		e_timestamp =
		#{record.eTimestamp,jdbcType=TIMESTAMP},
		enable =
		#{record.enable,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.xyb2c.pojo.SundryWorkerClass">
		update sundry_worker_class
		<set>
			<if test="information != null">
				information = #{information,jdbcType=VARCHAR},
			</if>
			<if test="cTimestamp != null">
				c_timestamp = #{cTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="eTimestamp != null">
				e_timestamp = #{eTimestamp,jdbcType=TIMESTAMP},
			</if>
			<if test="enable != null">
				enable = #{enable,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xyb2c.pojo.SundryWorkerClass">
		update
		sundry_worker_class
		set information = #{information,jdbcType=VARCHAR},
		c_timestamp = #{cTimestamp,jdbcType=TIMESTAMP},
		e_timestamp =
		#{eTimestamp,jdbcType=TIMESTAMP},
		enable = #{enable,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectSundryWokerClass" resultMap="BaseResultMap">
		select * from
		sundry_worker_class
	</select>
	<insert id="sundryWokerClassInsert" parameterType="com.xyb2c.pojo.SundryWorkerClass">
		insert into
		sundry_worker_class(information)
		values(#{information,jdbcType=VARCHAR})
	</insert>
	<delete id="sundryWokerClassDelete" parameterType="com.xyb2c.pojo.SundryWorkerClass">
		delete from
		sundry_worker_class where information = #{information}
	</delete>
	<select id="getAllRole" parameterType="com.xyb2c.pojo.PageBean"
		resultMap="BaseResultMap">
		select * from sundry_worker_class limit #{start},#{end}
	</select>
	<insert id="insertWorkerRole">
		insert into user_role(uid,rid)
		values(#{workerId,jdbcType=INTEGER},#{roleId,jdbcType=INTEGER})
	</insert>
	<select id="WorkerIsexist" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select uid as id from user_role where uid=#{workerId}
	</select>
	<select id="getSundryWorkerClass" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select * from sundry_worker_class where id in(select id from
		sundry_worker_class INNER JOIN user_role where
		user_role.uid=#{workerId}) and
		enable=1
	</select>
	<delete id="deleteWorkerRole">
		delete from user_role where uid=#{workerId} and
		rid=#{roleId}
	</delete>
</mapper>